---
name: ansible-test

on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'

env:
  NAMESPACE: t_systems_mms
  COLLECTION_NAME: icinga_director

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
    runs-on: ubuntu-latest
    steps:
      # Run sanity tests inside a Docker container.
      # The docker container has all the pinned dependencies that are
      # required and all Python versions Ansible supports.
      - name: Perform sanity testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          # OPTIONAL If your sanity tests require code
          # from other collections, install them like this
          # test-deps: >-
          #   ansible.netcommon
          #   ansible.utils


  linting:
    name: Tox-Lint (py${{ matrix.python }})
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: python -m pip install flake8 tox

      - name: Run lint test
        run: tox -elinters -vv
        working-directory: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  integration:
    runs-on: ubuntu-latest
    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
        python:
          - "3.8"
          - "3.9"
          - "3.10"
        exclude:
          - ansible: stable-2.14
            python: 3.8
          - ansible: devel
            python: 3.8
    defaults:
      run:
        working-directory: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
    services:
      icinga:
        image: ghcr.io/t-systems-mms/icinga2:director-1.8.1
        ports:
          - 80:80
    steps:
      - name: >-
          Perform integration testing against
          Ansible version ${{ matrix.ansible }}
          under Python ${{ matrix.python }}
        uses: ansible-community/ansible-test-gh-action@v1.11.0
        with:
          ansible-core-version: ${{ matrix.ansible }}
          # OPTIONAL command to run before invoking `ansible-test integration`
          pre-test-cmd: sed -i "s/127.0.0.1/icinga/g" tests/integration/integration_config.yml
          target-python-version: ${{ matrix.python }}
          testing-type: integration
          # OPTIONAL If your integration tests require code
          # from other collections, install them like this
          # test-deps: ansible.netcommon
